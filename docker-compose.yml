version: '3.9'

services:

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    networks:
      - app-network

  user-service-a:
    build:
      context: ./user-service-A
    container_name: user-service-a
    environment:
      - PORT=50051
      - SERVICE_ID=A
    ports:
      - "50051:50051"
    depends_on:
      - mongo
      - rabbitmq
    restart: always
    networks:
      - app-network

  user-service-b:
    build:
      context: ./user-service-B
    container_name: user-service-b
    environment:
      - PORT=50052
      - SERVICE_ID=B
    ports:
      - "50052:50052"
    depends_on:
      - mongo
      - rabbitmq
    restart: always
    networks:
      - app-network

  user-service-c:
    build:
      context: ./user-service-C
    container_name: user-service-c
    environment:
      - PORT=50053
      - SERVICE_ID=C
    ports:
      - "50053:50053"
    depends_on:
      - mongo
      - rabbitmq
    restart: always
    networks:
      - app-network

volumes:
  mongo_data:

networks:
  app-network:
    driver: bridge
